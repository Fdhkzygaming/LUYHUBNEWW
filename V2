local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\99\235","\226\77\197\42\188\32"),function(v42)if (v9(v42,2)==79) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=v10(v8(v42,16));if v30 then local v111=0;local v112;while true do if (v111==0) then v112=v13(v101,v30);v30=nil;v111=1;end if (v111==1) then return v112;end end else return v101;end end end);local function v31(v43,v44,v45)if v45 then local v102=0;local v103;while true do if (v102==0) then v103=(v43/((5 -3)^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;end end else local v104=2^(v44-1) ;return (((v43%(v104 + v104))>=v104) and (2 -1)) or 0 ;end end local function v32()local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33()local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34()local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end end end local function v35()local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,59 -28 );local v60=((v31(v56,32)==1) and -1) or (2 -1) ;if (v59==0) then if (v58==0) then return v60 * 0 ;else local v113=0;while true do if (0==v113) then v59=1;v57=619 -(555 + 64) ;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end local function v36(v61)local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (v62==2) then v64={};for v114=1, #v63 do v64[v114]=v10(v9(v11(v63,v114,v114)));end v62=3;end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (v62==3) then return v14(v64);end end end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=569 -(367 + 201) ,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1)==0) then local v107=0;local v108;local v109;local v110;while true do if (v107==1) then v110={v33(),v33(),nil,nil};if (v108==0) then local v123=0;while true do if (v123==0) then v110[3]=v33();v110[4]=v33();break;end end elseif (v108==1) then v110[3]=v34();elseif (v108==2) then v110[3]=v34() -(2^(5 + 11)) ;elseif (v108==3) then v110[3]=v34() -(2^16) ;v110[4]=v33();end v107=2;end if (v107==3) then if (v31(v109,3,3)==(1 + 0)) then v110[4]=v70[v110[4]];end v65[v82]=v110;break;end if (v107==2) then if (v31(v109,1,1)==1) then v110[2]=v70[v110[2]];end if (v31(v109,2,2)==1) then v110[3]=v70[v110[3]];end v107=3;end if (v107==0) then v108=v31(v83,2,3);v109=v31(v83,931 -(214 + 713) ,6);v107=1;end end end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74)local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...)local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v105=0,v94 do if (v105>=v88) then v92[v105-v88 ]=v93[v105 + 1 ];else v96[v105]=v93[v105 + 1 ];end end local v97=(v94-v88) + (878 -(282 + 595)) ;local v98;local v99;while true do local v106=0;while true do if (1==v106) then if (v99<=44) then if (v99<=21) then if (v99<=10) then if (v99<=4) then if (v99<=1) then if (v99>0) then local v136=v98[2];do return v21(v96,v136,v91);end else v74[v98[3]]=v96[v98[2]];end elseif (v99<=(1639 -(1523 + 114))) then v96[v98[2 + 0 ]]();elseif (v99>3) then v96[v98[2]][v98[3]]=v96[v98[4]];else local v214=0;local v215;local v216;local v217;local v218;while true do if (v214==0) then v215=v98[2 -0 ];v216,v217=v89(v96[v215](v21(v96,v215 + 1 ,v98[3])));v214=1;end if (v214==1) then v91=(v217 + v215) -1 ;v218=0;v214=2;end if (2==v214) then for v392=v215,v91 do v218=v218 + 1 ;v96[v392]=v216[v218];end break;end end end elseif (v99<=(1072 -(68 + 997))) then if (v99<=5) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99>6) then v96[v98[2]]=v96[v98[3]][v98[4]];else v96[v98[2]]=v98[3];end elseif (v99<=8) then local v141=0;local v142;while true do if (v141==0) then v142=v98[2];v96[v142]=v96[v142](v21(v96,v142 + 1 ,v91));break;end end elseif (v99==(1279 -(226 + 1044))) then local v223=v87[v98[3]];local v224;local v225={};v224=v18({},{[v7("\5\41\253\187\62\19\236","\213\90\118\148")]=function(v309,v310)local v311=v225[v310];return v311[1][v311[8 -6 ]];end,[v7("\100\17\186\83\90\82\32\176\83\85","\45\59\78\212\54")]=function(v312,v313,v314)local v315=0;local v316;while true do if (v315==0) then v316=v225[v313];v316[118 -(32 + 85) ][v316[2]]=v314;break;end end end});for v317=1 + 0 ,v98[1 + 3 ] do v90=v90 + 1 ;local v318=v86[v90];if (v318[1]==19) then v225[v317-1 ]={v96,v318[3]};else v225[v317-1 ]={v73,v318[3]};end v95[ #v95 + 1 ]=v225;end v96[v98[2]]=v40(v223,v224,v74);else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99<=15) then if (v99<=(969 -(892 + 65))) then if (v99>(25 -14)) then local v143=v98[2];v96[v143](v21(v96,v143 + 1 ,v91));else local v144=v98[2];local v145=v96[v144];for v205=v144 + 1 ,v91 do v15(v145,v96[v205]);end end elseif (v99<=13) then v96[v98[2]]=v40(v87[v98[3]],nil,v74);elseif (v99>14) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]={};end elseif (v99<=18) then if (v99<=16) then local v147=0;local v148;while true do if (v147==0) then v148=v98[2];v96[v148]=v96[v148]();break;end end elseif (v99>17) then v96[v98[2]]=v96[v98[3]] + v98[4] ;elseif not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=19) then v96[v98[2]]=v96[v98[3]];elseif (v99>20) then v96[v98[2]][v98[3]]=v98[4];else v96[v98[2]]=v73[v98[3]];end elseif (v99<=32) then if (v99<=26) then if (v99<=23) then if (v99==22) then local v151=0;local v152;local v153;local v154;local v155;while true do if (0==v151) then v152=v98[2];v153,v154=v89(v96[v152](v21(v96,v152 + 1 ,v98[3])));v151=1;end if (v151==2) then for v354=v152,v91 do local v355=0;while true do if (v355==0) then v155=v155 + 1 ;v96[v354]=v153[v155];break;end end end break;end if (v151==1) then v91=(v154 + v152) -1 ;v155=0;v151=2;end end else local v156=0;local v157;local v158;local v159;local v160;while true do if (v156==2) then for v356=v157,v91 do v160=v160 + 1 ;v96[v356]=v158[v160];end break;end if (v156==0) then v157=v98[2];v158,v159=v89(v96[v157](v21(v96,v157 + (1 -0) ,v91)));v156=1;end if (1==v156) then v91=(v159 + v157) -1 ;v160=0;v156=2;end end end elseif (v99<=24) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>25) then local v236=0;local v237;while true do if (v236==0) then v237=v98[2];do return v96[v237](v21(v96,v237 + 1 ,v98[3]));end break;end end else local v238=v98[3 -1 ];local v239=v96[v238];local v240=v96[v238 + 2 ];if (v240>0) then if (v239>v96[v238 + 1 ]) then v90=v98[3];else v96[v238 + 3 ]=v239;end elseif (v239<v96[v238 + 1 ]) then v90=v98[3];else v96[v238 + 3 ]=v239;end end elseif (v99<=(379 -(87 + 263))) then if (v99<=27) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99>28) then local v241=v98[2];local v242={};for v324=1, #v95 do local v325=0;local v326;while true do if (v325==0) then v326=v95[v324];for v413=0, #v326 do local v414=0;local v415;local v416;local v417;while true do if (v414==1) then v417=v415[2];if ((v416==v96) and (v417>=v241)) then local v435=0;while true do if (v435==0) then v242[v417]=v416[v417];v415[181 -(67 + 113) ]=v242;break;end end end break;end if (v414==0) then v415=v326[v413];v416=v415[1];v414=1;end end end break;end end end else local v243=0;local v244;while true do if (0==v243) then v244=v98[2];v96[v244](v96[v244 + 1 ]);break;end end end elseif (v99<=30) then if (v98[2 + 0 ]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>31) then v96[v98[4 -2 ]]=v74[v98[3]];else do return v96[v98[2]]();end end elseif (v99<=38) then if (v99<=35) then if (v99<=33) then local v163=v98[2];local v164=v96[v163 + 2 ];local v165=v96[v163] + v164 ;v96[v163]=v165;if (v164>0) then if (v165<=v96[v163 + 1 ]) then v90=v98[3];v96[v163 + 3 ]=v165;end elseif (v165>=v96[v163 + 1 ]) then v90=v98[3];v96[v163 + 3 ]=v165;end elseif (v99==34) then v96[v98[2]]=v98[3] + v96[v98[3 + 1 ]] ;elseif (v98[7 -5 ]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=36) then local v167=0;local v168;local v169;while true do if (v167==1) then for v364=v168 + 1 ,v91 do v15(v169,v96[v364]);end break;end if (v167==0) then v168=v98[2];v169=v96[v168];v167=1;end end elseif (v99==(989 -(802 + 150))) then v90=v98[7 -4 ];else v96[v98[3 -1 ]]={};end elseif (v99<=41) then if (v99<=39) then local v170=v98[2];local v171=v96[v98[3]];v96[v170 + 1 ]=v171;v96[v170]=v171[v98[4]];elseif (v99==40) then v96[v98[2]]= #v96[v98[3]];else do return v96[v98[2]]();end end elseif (v99<=(31 + 11)) then v96[v98[2]]=v74[v98[1000 -(915 + 82) ]];elseif (v99==(121 -78)) then v96[v98[2]]=v98[3];else v96[v98[2]]=v96[v98[3]];end elseif (v99<=66) then if (v99<=55) then if (v99<=49) then if (v99<=46) then if (v99>45) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else local v178=0;local v179;while true do if (v178==0) then v179=v98[2];do return v21(v96,v179,v91);end break;end end end elseif (v99<=47) then v96[v98[2]]();elseif (v99>48) then if not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else local v256=v98[2];v96[v256]=v96[v256]();end elseif (v99<=52) then if (v99<=50) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];elseif (v99==51) then local v258=0;local v259;local v260;local v261;local v262;while true do if (v258==1) then v91=(v261 + v259) -1 ;v262=0;v258=2;end if (v258==2) then for v402=v259,v91 do local v403=0;while true do if (v403==0) then v262=v262 + 1 ;v96[v402]=v260[v262];break;end end end break;end if (v258==0) then v259=v98[2 + 0 ];v260,v261=v89(v96[v259](v96[v259 + 1 ]));v258=1;end end else v96[v98[2]]=v40(v87[v98[3]],nil,v74);end elseif (v99<=53) then do return;end elseif (v99>54) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3 -0 ];end else local v264=v98[2];local v265=v96[v264 + 2 ];local v266=v96[v264] + v265 ;v96[v264]=v266;if (v265>0) then if (v266<=v96[v264 + 1 ]) then local v404=0;while true do if (v404==0) then v90=v98[3];v96[v264 + 3 ]=v266;break;end end end elseif (v266>=v96[v264 + 1 ]) then local v405=0;while true do if (v405==0) then v90=v98[3];v96[v264 + 3 ]=v266;break;end end end end elseif (v99<=60) then if (v99<=57) then if (v99>56) then local v182=0;local v183;while true do if (v182==0) then v183=v98[2];do return v96[v183](v21(v96,v183 + 1 ,v98[3]));end break;end end else local v184=v98[2];local v185={};for v206=1, #v95 do local v207=v95[v206];for v268=0, #v207 do local v269=0;local v270;local v271;local v272;while true do if (v269==0) then v270=v207[v268];v271=v270[1188 -(1069 + 118) ];v269=1;end if (v269==1) then v272=v270[2];if ((v271==v96) and (v272>=v184)) then local v418=0;while true do if (v418==0) then v185[v272]=v271[v272];v270[1]=v185;break;end end end break;end end end end end elseif (v99<=58) then v96[v98[2]]=v98[3] + v96[v98[4]] ;elseif (v99==59) then local v273=0;local v274;while true do if (v273==0) then v274=v98[4 -2 ];v96[v274]=v96[v274](v21(v96,v274 + 1 ,v98[3]));break;end end else for v331=v98[2],v98[3] do v96[v331]=nil;end end elseif (v99<=63) then if (v99<=(133 -72)) then local v187=0;local v188;while true do if (v187==0) then v188=v98[2];v96[v188](v21(v96,v188 + 1 + 0 ,v98[3]));break;end end elseif (v99==62) then v96[v98[3 -1 ]]= #v96[v98[3 + 0 ]];else local v276=v87[v98[3]];local v277;local v278={};v277=v18({},{[v7("\47\105\138\133\130\43\181","\144\112\54\227\235\230\78\205")]=function(v334,v335)local v336=v278[v335];return v336[1][v336[2]];end,[v7("\140\23\1\249\199\82\189\44\10\228","\59\211\72\111\156\176")]=function(v337,v338,v339)local v340=0;local v341;while true do if (v340==0) then v341=v278[v338];v341[1][v341[2]]=v339;break;end end end});for v342=1,v98[4] do v90=v90 + 1 ;local v343=v86[v90];if (v343[1]==19) then v278[v342-1 ]={v96,v343[3]};else v278[v342-1 ]={v73,v343[3]};end v95[ #v95 + (792 -(368 + 423)) ]=v278;end v96[v98[2]]=v40(v276,v277,v74);end elseif (v99<=64) then v96[v98[2]][v98[3]]=v96[v98[4]];elseif (v99>65) then local v280=v98[2];v96[v280](v21(v96,v280 + 1 ,v98[3]));else local v281=0;local v282;local v283;while true do if (v281==0) then v282=v98[2];v283=v96[v98[3]];v281=1;end if (v281==1) then v96[v282 + 1 ]=v283;v96[v282]=v283[v98[4]];break;end end end elseif (v99<=77) then if (v99<=71) then if (v99<=68) then if (v99==67) then local v191=0;local v192;while true do if (v191==0) then v192=v98[2];v96[v192]=v96[v192](v21(v96,v192 + 1 ,v98[3]));break;end end else local v193=0;local v194;while true do if (v193==0) then v194=v98[6 -4 ];v96[v194]=v96[v194](v21(v96,v194 + 1 ,v91));break;end end end elseif (v99<=69) then do return;end elseif (v99>70) then local v284=0;local v285;while true do if (v284==0) then v285=v98[2];v96[v285](v96[v285 + 1 ]);break;end end else v90=v98[3];end elseif (v99<=74) then if (v99<=72) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==73) then local v288=0;local v289;while true do if (0==v288) then v289=v98[2];v96[v289](v21(v96,v289 + 1 ,v91));break;end end else v96[v98[2]][v98[3]]=v98[4];end elseif (v99<=75) then for v208=v98[20 -(10 + 8) ],v98[3] do v96[v208]=nil;end elseif (v99==76) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[11 -8 ];end else v96[v98[2]]=v96[v98[3]]%v98[446 -(416 + 26) ] ;end elseif (v99<=83) then if (v99<=80) then if (v99<=78) then local v195=v98[2];local v196,v197=v89(v96[v195](v21(v96,v195 + 1 ,v91)));v91=(v197 + v195) -1 ;local v198=0;for v210=v195,v91 do local v211=0;while true do if (v211==0) then v198=v198 + 1 ;v96[v210]=v196[v198];break;end end end elseif (v99==79) then v96[v98[2]]=v96[v98[3]] + v98[4] ;else local v294=0;local v295;local v296;local v297;local v298;while true do if (v294==0) then v295=v98[2];v296,v297=v89(v96[v295](v96[v295 + 1 ]));v294=1;end if (1==v294) then v91=(v297 + v295) -(3 -2) ;v298=0 + 0 ;v294=2;end if (v294==2) then for v408=v295,v91 do v298=v298 + 1 ;v96[v408]=v296[v298];end break;end end end elseif (v99<=81) then v96[v98[3 -1 ]]=v96[v98[3]]%v98[4] ;elseif (v99>82) then v96[v98[2]]=v73[v98[3]];else v74[v98[3]]=v96[v98[2]];end elseif (v99<=86) then if (v99<=84) then v96[v98[2]]=v98[3]~=0 ;elseif (v99==85) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[441 -(145 + 293) ];end else v96[v98[2]]=v96[v98[3]][v98[434 -(44 + 386) ]];end elseif (v99<=87) then local v201=0;local v202;local v203;local v204;while true do if (v201==1) then v204=v96[v202 + 1 + 1 ];if (v204>0) then if (v203>v96[v202 + 1 ]) then v90=v98[3];else v96[v202 + 3 ]=v203;end elseif (v203<v96[v202 + 1 ]) then v90=v98[3];else v96[v202 + 3 ]=v203;end break;end if (v201==0) then v202=v98[1488 -(998 + 488) ];v203=v96[v202];v201=1;end end elseif (v99==(73 + 15)) then v96[v98[2]]=v96[v98[775 -(201 + 571) ]]%v96[v98[4]] ;else v96[v98[2]]=v98[3]~=0 ;end v90=v90 + 1 ;break;end if (v106==0) then v98=v86[v90];v99=v98[1];v106=1;end end end end;end return v40(v39(),{},v28)(...);end vv17(),...);
